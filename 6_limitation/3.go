package main

/**
32 位无符号整数的范围是 0-4294967295, 现在有一个包含 40 亿个无符号整数的文件，所以在整个范围中必然有没出现过的数。
可以使用最多 1GB 的内存， 怎么找到所有没出现过的数？
进阶： 内存限制为 10MB, 但是只用找到一个没出现过的数即可
*/

// 1. 申请一个长度为 4294967296 的 bitset（500MB），每个 bit 代表一个数，初始都是 0
// 2. 读取文件中的每个数，将 bitset 中对应的位置置为 1
// 3. 遍历 bitset，找到为 0 的位置，即为没出现过的数

// 进阶
// 1. 4294967296 个数平分为 64 个区间，每个区间的大小为 67108864
// 2. 遍历文件，统计每个区间的数目，找到一个区间的数目小于 67108864，说明这个区间内有没出现过的数
// 3. 申请一个长度为 67108864 的 bitset（8MB），每个 bit 代表一个数，初始都是 0
// 4. 再次遍历文件，只关注刚刚找到区间上的数，将每个数对应的 bit 置为 1
// 5. 遍历 bitset，找到为 0 的位置，即为没出现过的数
